{"version":3,"sources":["components/student/student.actions.tsx","components/student/Pagination.tsx","components/version-management/privacyPolicy.tsx","components/version-management/viewVersionHistory.tsx","components/version-management/addVersionHistory.tsx","components/version-management/termsAndConditions.tsx","components/version-management/versionManagement.tsx","App.tsx","components/student/student.reducer.tsx","store/action-utils.ts","components/student/student.api.ts","components/student/student.saga.tsx","store/index.ts","index.tsx"],"names":["LOAD_STUDENT","LOAD_STUDENT_PAGING","LOAD_STUDENT_SUCCESS","LOAD_STUDENT_ERROR","UPDATE_STUDENT","UPDATE_STUDENT_SUCCESS","UPDATE_STUDENT_ERROR","DELETE_STUDENT","DELETE_STUDENT_SUCCESS","DELETE_STUDENT_ERROR","ADD_STUDENT","ADD_STUDENT_SUCCESS","ADD_STUDENT_ERROR","SELECT_STUDENT","loadStudentsAction","filter","type","payload","updateStudentAction","student","deleteStudentAction","addStudentAction","React","memo","props","pagination","onPageChange","onPageSizeChange","options","value","label","handlePageChange","newPage","onChange","newPageSize","className","defaultValue","disabled","number","onClick","totalPages","PrivacyPolicy","useState","terms","setTerms","useEffect","a","fetch","response","json","responseJson","console","log","fetchStudents","addVersion","style","padding","Header","color","backgroundColor","Body","map","st","key","id","license","version","dateChanged","changedBy","consentReset","comment","variant","marginTop","ViewVersionHistory","closeViewVersionHistory","setOptions","termsOrigin","setTermsOrigin","onChangeOption","op","filterOptions","e","listLicense","searchByLicense","handleClose","Modal","show","onHide","backdrop","keyboard","dialogClassName","closeButton","Title","Form","Row","Col","sm","margin","xs","Button","Footer","AddVersionHistory","closeAddVersionHistory","textAlign","fontWeight","Label","Control","placeholder","Check","as","rows","File","TermsAndConditions","viewHistory","setViewHistory","isAddVersionHistory","setIsAddVersionHistory","viewHistoryAction","Card","isClose","VersionManagement","Student","withRouter","lazy","App","fallback","from","exact","to","path","component","Component","initState","loading","data","error","page","modifyStudentState","studentState","studentChanges","h","parseList","status","Error","message","list","parseItem","code","item","undefined","deleteStudentApi","axios","delete","updateStudentApi","put","addStudentApi","post","loadStudentsApi","get","searchName","size","loadingStudentsAsync","watchLoadingStudentsAsync","updatingStudentAsync","watchUpdatingStudentAsync","deletingStudentAsync","watchDeletingStudentAsync","addingStudentAsync","watchAddingStudentAsync","studentSaga","call","students","_embedded","paging","takeEvery","updatedStudent","addedStudent","all","store","combineReducers","state","action","Pagination","updateError","result","requestData","selectedStudent","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","createStore","app","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc621691.chunk.js","sourcesContent":["export const LOAD_STUDENT = '[Students] LOAD_STUDENT';\nexport const LOAD_STUDENT_PAGING = '[Students] LOAD_STUDENT_PAGING';\nexport const LOAD_STUDENT_SUCCESS = '[Students] LOAD_STUDENT_SUCCESS';\nexport const LOAD_STUDENT_ERROR = '[Students] LOAD_STUDENT_ERROR';\n\nexport const UPDATE_STUDENT = '[Students] UPDATE_STUDENT';\nexport const UPDATE_STUDENT_SUCCESS = '[Students] UPDATE_STUDENT_SUCCESS';\nexport const UPDATE_STUDENT_ERROR = '[Students] UPDATE_STUDENT_ERROR';\n\nexport const DELETE_STUDENT = '[Students] DELETE_STUDENT';\nexport const DELETE_STUDENT_SUCCESS = '[Students] DELETE_STUDENT_SUCCESS';\nexport const DELETE_STUDENT_ERROR = '[Students] DELETE_STUDENT_ERROR';\n\nexport const ADD_STUDENT = '[Students] ADD_STUDENT';\nexport const ADD_STUDENT_SUCCESS = '[Students] ADD_STUDENT_SUCCESS';\nexport const ADD_STUDENT_ERROR = '[Students] ADD_STUDENT_ERROR';\n\nexport const SELECT_STUDENT = '[STUDENT] SELECT_STUDENT';\n\nexport const selectStudentsAction = (student: any) => ({ type: SELECT_STUDENT, payload: student });\nexport const loadStudentsAction = (filter: any) => ({ type: LOAD_STUDENT, payload: filter });\n\nexport function updateStudentAction(student: any) {\n   return { \n       type: UPDATE_STUDENT,\n       payload: student \n    };\n}\n\nexport const deleteStudentAction = (student: any) => ({ type: DELETE_STUDENT, payload: student });\nexport const addStudentAction = (student: any) => ({ type: ADD_STUDENT, payload: student });\n","import React from 'react';\nimport Select from 'react-select'\n\nfunction Pagination(props: any) {\n    const { pagination, onPageChange, onPageSizeChange } = props;\n    const options = [\n        { value: 5, label: '5' },\n        { value: 10, label: '10' },\n        { value: 15, label: '15' },\n        { value: 20, label: '20' },\n        { value: 50, label: '50' },\n        { value: 100, label: '100' },\n    ];\n\n    function handlePageChange(newPage: number) {\n        if (onPageChange) {\n            onPageChange(newPage);\n        }\n    }\n\n    function onChangePageSize(newPageSize: any) {\n        if (onPageSizeChange){\n            onPageSizeChange(newPageSize.value);\n        }\n    }\n\n    return (\n        <div>\n            <Select options={options} onChange={onChangePageSize} className=\"select\" defaultValue={options[0]}/>\n            <button className=\"btn-paginate\" disabled={pagination.number === 0} onClick={() => handlePageChange(0)}>First</button>\n            <button className=\"btn-paginate\" disabled={pagination.number === 0} onClick={() => handlePageChange(pagination.number - 1)}>Previous</button>\n            <button className=\"btn-paginate\" disabled={pagination.number === pagination.totalPages - 1} onClick={() => handlePageChange(pagination.number + 1)}>Next</button>\n            <button className=\"btn-paginate\" disabled={pagination.number === pagination.totalPages - 1} onClick={() => handlePageChange(pagination.totalPages - 1)}>Last</button>\n        </div>\n    );\n\n}\n\nexport default React.memo(Pagination);\n","import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nfunction PrivacyPolicy() {\n\n  const [terms, setTerms] = useState([]);\n\n  useEffect(() => {\n    async function fetchStudents() {\n      try {\n        const url = `mockapi/policy`;\n        const response = await fetch(url);\n        const responseJson = await response.json();\n        setTerms(responseJson);\n      } catch (error) {\n        console.log('Failed to fetch data');\n      }\n    }\n    fetchStudents();\n  }, []);\n\n  const renderTable = () => {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>License</th>\n            <th>Version</th>\n            <th>Date Changed</th>\n            <th>Changed By</th>\n            <th>Consent Reset</th>\n            <th>Comment</th>\n          </tr>\n        </thead>\n        <tbody>\n          {terms.map((st: any) => (\n            <tr key={st?.id}>\n              <td>{st?.license}</td>\n              <td>{st?.version}</td>\n              <td> {st?.dateChanged}</td>\n              <td> {st?.changedBy}</td>\n              <td>{st?.consentReset ? 'Y' : 'N'}</td>\n              <td>{st?.comment}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  const renderAction = () => {\n    return (\n      <div>\n        <Button variant=\"success\" onClick={() => addVersion()}>\n          Add New Version\n        </Button>\n        &nbsp;\n        &nbsp;\n        <Button variant=\"success\" style={{marginTop: '10px'}} onClick={() => viewHistory()}>\n          View History Version\n        </Button>\n      </div>\n    );\n  };\n\n  const addVersion = () => {};\n\n  function viewHistory() {}\n\n  return (\n    <div className=\"content-container\" style={{ padding: '20px'}}>\n      <div>\n        <Card>\n          <Card.Header style={{ color: 'white', backgroundColor: '#337ab7' }}>\n          Privacy Policy\n          </Card.Header>\n          <Card.Body>\n              <div className=\"row\">\n                <div className=\"col-9\">{renderTable()}</div>\n                <div className=\"col-3\">{renderAction()}</div>\n              </div>\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default PrivacyPolicy;","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col'\nimport Select from 'react-select';\n\nfunction ViewVersionHistory(props: any) {\n  const { closeViewVersionHistory } = props;\n  const [options, setOptions] = useState([]);\n  const [terms, setTerms] = useState([]);\n  const [termsOrigin, setTermsOrigin] = useState([]);\n\n  useEffect(() => {\n    async function fetchStudents() {\n      try {\n        const url = `mockapi/term`;\n        const response = await fetch(url);\n        const responseJson = await response.json();\n        setTerms(responseJson);\n        setTermsOrigin(responseJson);\n        const listLicense = responseJson.map((e: any) => {\n            const license: any = {};\n            license['label'] = e.license;\n            license['value']  = e.license;\n            return license;\n        });\n        setOptions(listLicense);\n      } catch (error) {\n        console.log('Failed to fetch data');\n      }\n    }\n    fetchStudents();\n  }, []);\n\n  const renderTable = () => {\n    return (\n      <table style={{marginTop:'20px'}}>\n        <thead>\n          <tr>\n            <th>License</th>\n            <th>Version</th>\n            <th>Date Changed</th>\n            <th>Changed By</th>\n            <th>Consent Reset</th>\n            <th>Comment</th>\n          </tr>\n        </thead>\n        <tbody>\n          {terms.map((st: any) => (\n            <tr key={st?.id}>\n              <td>{st?.license}</td>\n              <td>{st?.version}</td>\n              <td> {st?.dateChanged}</td>\n              <td> {st?.changedBy}</td>\n              <td>{st?.consentReset ? 'Y' : 'N'}</td>\n              <td>{st?.comment}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  function onChangeOption(op: any) {\n    const filterOptions = termsOrigin.filter((e: any)=> e.license === op.value);\n    setTerms(filterOptions);\n  }\n\n  const renderSearchAction = () => {\n    return (\n      <div>\n        <Form>\n          <Form.Row className=\"align-items-center\">\n            <Col sm={3}>License:</Col>\n            <Col sm={3}>\n              <Select\n                style={{ margin: '5px' }}\n                options={options}\n                onChange={onChangeOption}\n                // value={options[0]}\n              />\n            </Col>\n            <Col xs=\"auto\">\n              <Button variant=\"success\" onClick={() => searchByLicense()}>\n                Search\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </div>\n    );\n  };\n\n  const searchByLicense = () => {};\n\n  const handleClose = () => {\n    closeViewVersionHistory(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        show={true}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n        dialogClassName=\"modal-dialog modal-lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>View History</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {renderSearchAction()}\n          {renderTable()}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ViewVersionHistory;\n","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Select from 'react-select';\n\nfunction AddVersionHistory(props: any) {\n  const { closeAddVersionHistory } = props;\n  const [options, setOptions] = useState([]);\n  const [termsOrigin, setTermsOrigin] = useState([]);\n\n  const handleClose = () => {\n    closeAddVersionHistory(false);\n  };\n\n  useEffect(() => {\n    async function fetchStudents() {\n      try {\n        const url = `mockapi/term`;\n        const response = await fetch(url);\n        const responseJson = await response.json();\n        setTermsOrigin(responseJson);\n        const listLicense = responseJson.map((e: any) => {\n          const license: any = {};\n          license['label'] = e.license;\n          license['value'] = e.license;\n          return license;\n        });\n        setOptions(listLicense);\n      } catch (error) {\n        console.log('Failed to fetch data');\n      }\n    }\n    fetchStudents();\n  }, []);\n\n  function onChangeOption(op: any) {\n    const filterOptions = termsOrigin.filter(\n      (e: any) => e.license === op.value\n    );\n  }\n\n  const renderForm = () => {\n    return (\n      <div>\n        <Form>\n          <Form.Row className=\"align-items-center\">\n            <Col sm={3} style={{ textAlign: 'right', fontWeight: 'bold' }}>\n              License\n            </Col>\n            <Col sm={9}>\n              <Select\n                style={{ margin: '5px' }}\n                options={options}\n                onChange={onChangeOption}\n              />\n            </Col>\n          </Form.Row>\n\n          <Form.Row\n            className=\"align-items-center\"\n            style={{ marginTop: '20px' }}\n          >\n            <Col sm={3}>\n              <Form.Label style={{ fontWeight: 'bold' }}>\n                Current Version\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Current Version\"\n                disabled\n              />\n            </Col>\n            <Col sm={3}>\n              <Form.Label style={{ fontWeight: 'bold' }}>\n                New Version\n              </Form.Label>\n              <Form.Control type=\"text\" placeholder=\"New version\" />\n            </Col>\n          </Form.Row>\n\n          <Form.Row className=\"align-items-center\" style={{ marginTop: '20px' }}>\n            <Col sm={3} style={{ textAlign: 'right', fontWeight: 'bold' }}>\n              ResetConsent?\n            </Col>\n            <Col sm={3}>\n              <Form.Check label=\"Yes\" type=\"radio\" id=\"yes\" />\n              <Form.Check label=\"No\" type=\"radio\" id=\"no\" />\n            </Col>\n          </Form.Row>\n\n          <Form.Row className=\"align-items-center\" style={{ marginTop: '20px' }}>\n            <Col sm={3} style={{ textAlign: 'right', fontWeight: 'bold' }}>\n              Comment\n            </Col>\n            <Col sm={9}>\n              <Form.Control as=\"textarea\" rows={3} />\n            </Col>\n          </Form.Row>\n\n          <Form.Row className=\"align-items-center\" style={{ marginTop: '20px' }}>\n            <Col sm={3} style={{ textAlign: 'right', fontWeight: 'bold' }}>\n              File\n            </Col>\n            <Col sm={9}>\n            <Form.File id=\"file\" />\n            </Col>\n          </Form.Row>\n\n        </Form>\n      </div>\n    );\n  };\n\n  const searchByLicense = () => {};\n  const handleSave = () => {};\n\n  return (\n    <div>\n      <Modal\n        show={true}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n        dialogClassName=\"modal-dialog modal-lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add New Terms and Conditions</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{renderForm()}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"success\" onClick={handleSave}>\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AddVersionHistory;\n","import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ViewVersionHistory from './viewVersionHistory';\nimport AddVersionHistory from './addVersionHistory';\n\n\nfunction TermsAndConditions() {\n  const [terms, setTerms] = useState([]);\n  const [viewHistory, setViewHistory] = useState<boolean>(false);\n  const [isAddVersionHistory, setIsAddVersionHistory] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function fetchStudents() {\n      try {\n        const url = `mockapi/term`;\n        const response = await fetch(url);\n        const responseJson = await response.json();\n      //  responseJson.map ((e: any) => e.dateChanged = moment(e.dateChanged, 'DD-MM-YYYY'));\n        setTerms(responseJson);\n      } catch (error) {\n        console.log('Failed to fetch data');\n      }\n    }\n    fetchStudents();\n  }, []);\n\n  const renderTable = () => {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>License</th>\n            <th>Version</th>\n            <th>Date Changed</th>\n            <th>Changed By</th>\n            <th>Consent Reset</th>\n            <th>Comment</th>\n          </tr>\n        </thead>\n        <tbody>\n          {terms.map((st: any) => (\n            <tr key={st?.id}>\n              <td>{st?.license}</td>\n              <td>{st?.version}</td>\n              <td> {st?.dateChanged}</td>\n              <td> {st?.changedBy}</td>\n              <td>{st?.consentReset ? 'Y' : 'N'}</td>\n              <td>{st?.comment}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  const renderAction = () => {\n    return (\n      <div>\n        <Button variant=\"success\" onClick={() => addVersion()}>\n          Add New Version\n        </Button>\n        &nbsp;\n        &nbsp;\n        <Button variant=\"success\" style={{marginTop: '10px'}} onClick={() => viewHistoryAction()}>\n          View History Version\n        </Button>\n      </div>\n    );\n  };\n\n  const addVersion = () => {\n    setIsAddVersionHistory(true);\n  };\n\n  const viewHistoryAction = () => {\n    setViewHistory(true);\n  }\n\n  const closeViewVersionHistory = (isClose: boolean) => {\n    setViewHistory(isClose);\n  }\n\n  const closeAddVersionHistory = (isClose: boolean) => {\n    setIsAddVersionHistory(isClose);\n  }\n  \n\n  return (\n    <div className=\"content-container\" style={{ padding: '20px'}}>\n      <div>\n        <Card>\n          <Card.Header style={{ color: 'white', backgroundColor: '#337ab7' }}>\n            Terms And Conditions\n          </Card.Header>\n          <Card.Body>\n              <div className=\"row\">\n                <div className=\"col-9\">{renderTable()}</div>\n                <div className=\"col-3\">{renderAction()}</div>\n              </div>\n              {viewHistory && <ViewVersionHistory closeViewVersionHistory={closeViewVersionHistory}/>}\n              {isAddVersionHistory && <AddVersionHistory closeAddVersionHistory={closeAddVersionHistory}/>}\n              \n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default TermsAndConditions;\n","import React from 'react';\nimport TermsAndConditions from './termsAndConditions';\nimport PrivacyPolicy from './privacyPolicy';\n\nfunction VersionManagement() {\n\n  return (\n    <div >\n      <TermsAndConditions/>\n      <PrivacyPolicy />\n    </div>\n  );\n}\n\nexport default VersionManagement;","import React, { Component, lazy, Suspense } from 'react';\nimport './styles.scss';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport VersionManagement from './components/version-management/versionManagement';\n\nconst Student = withRouter(lazy(() => import('./components/student/Student')));\nconst TermsAndConditions = withRouter(lazy(() => import('./components/version-management/termsAndConditions')));\nconst PrivacyPolicy =  withRouter(lazy(() => import('./components/version-management/privacyPolicy')));\n\nclass App extends Component {\n  render() {\n    return (\n     \n        <div className=\"section columns\">\n      \n          <main className=\"column\">\n            <Suspense fallback={<div>Loading...</div>}>\n              <Switch>\n                <Redirect from=\"/\" exact to=\"/versionManagement\" /> \n                <Route path=\"/student\" component={Student} />  \n                <Route path=\"/termsAndConditions\" component={TermsAndConditions} />  \n                <Route path=\"/privacyPolicy\" component={PrivacyPolicy} />  \n                <Route path=\"/versionManagement\" component={VersionManagement} />  \n\n                \n              </Switch>\n            </Suspense>\n          </main>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import { LOAD_STUDENT, ADD_STUDENT_ERROR, ADD_STUDENT_SUCCESS, ADD_STUDENT, DELETE_STUDENT_SUCCESS, DELETE_STUDENT, UPDATE_STUDENT_ERROR, \n  UPDATE_STUDENT_SUCCESS, UPDATE_STUDENT, LOAD_STUDENT_ERROR, LOAD_STUDENT_SUCCESS, SELECT_STUDENT, DELETE_STUDENT_ERROR, LOAD_STUDENT_PAGING } from './student.actions';\nimport Pagination from './Pagination';\n\nlet initState = {\n  loading: false,\n  data: [],\n  error: void 0,\n  page : 1\n};\n\nexport const studentsReducer = (state = initState, action: any) => {\n  switch (action.type) {\n    case LOAD_STUDENT:\n      return { ...state, loading: false, error: ''};\n    case LOAD_STUDENT_SUCCESS:\n      return { ...state, loading: false, data: [...action.payload] , pagination : Pagination};\n    case LOAD_STUDENT_ERROR:\n      return { ...state, loading: false, error: action.payload };\n\n    case UPDATE_STUDENT:\n      return {\n        ...state,\n        data: state.data.map((h: any) => {\n          if (h.id === action.payload.id) {\n            state.loading = true;\n          }\n          return h;\n        })\n      };\n    case UPDATE_STUDENT_SUCCESS:\n      return modifyStudentState(state, action.payload);\n    case UPDATE_STUDENT_ERROR:\n      return { ...state, loading: false, updateError: action.payload };\n\n    case DELETE_STUDENT: {\n      return {\n        ...state,\n        loading: true,\n        data: state.data.filter(h => h !== action.payload)\n      };\n    }\n\n    case DELETE_STUDENT_SUCCESS: {\n      const result = { ...state, loading: false };\n      return result;\n    }\n\n    case DELETE_STUDENT_ERROR: {\n      return {\n        ...state,\n        data: [...state.data, action.payload.requestData],\n        loading: false\n      };\n    }\n\n    case ADD_STUDENT: {\n      return { ...state, loading: true };\n    }\n\n    case ADD_STUDENT_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        data: [...state.data, { ...action.payload }]\n      };\n    }\n\n    case ADD_STUDENT_ERROR: {\n      return { ...state, loading: false };\n    }\n\n    case LOAD_STUDENT_PAGING: {\n      const {page} = action.payload;\n      return { ...state, page };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst modifyStudentState = (studentState: any, studentChanges: any) => {\n  return {\n    ...studentState,\n    loading: false,\n    data: studentState.data.map((h: any) => {\n      if (h.id === studentChanges.id) {\n        return { ...h, ...studentChanges };\n      } else {\n        return h;\n      }\n    })\n  };\n};\n\nlet initialSelectedStudent: null = null;\n\nexport const selectedStudentReducer = (state = initialSelectedStudent, action: any) => {\n  switch (action.type) {\n    case SELECT_STUDENT:\n      return action.payload ? { ...action.payload } : null;\n    default:\n      return state;\n  }\n};\n","export const parseList = (response: any) => {\n  if (response.status !== 200) throw Error(response.message);\n  let list = response.data;\n  if (typeof list !== 'object') {\n    list = [];\n  }\n  return list;\n};\n\nexport const parseItem = (response: any, code: number) => {\n  if (response.status !== code) throw Error(response.message);\n  let item = response.data;\n  if (typeof item !== 'object') {\n    item = undefined;\n  }\n  return item;\n};\n","import axios from 'axios';\nimport { parseItem, parseList } from '../../store/action-utils';\n\nexport const deleteStudentApi = async (student: any) => {\n  const response = await axios.delete(`/trainingApi/students/${student.id}`);\n  return parseItem(response, 200);\n};\n\nexport const updateStudentApi = async (student: any) => {\n  const response = await axios.put(`/trainingApi/students/${student.id}`, student);\n  return parseItem(response, 200);\n};\n\nexport const addStudentApi = async (student: any) => {\n  const response = await axios.post(`/trainingApi/students`, student);\n  return parseItem(response, 201);\n};\n\nexport const loadStudentsApi = async (filter: any) => {\n  const response = await axios.get(`/trainingApi/students/search/likeName?name=${filter.payload.searchName}&page=${filter.payload.number}&size=${filter.payload.size}&projection=InlineStudent`);\n  return parseList(response);\n};\n\nexport const loadClassesApi = async () => {\n  const response = await axios.get(`/trainingApi/trainingClasses/search/fetchClassCodes?projection=InlineTrainingClassGetIdOnly`);\n  return parseList(response);\n};\n","import { put, takeEvery, call, all } from 'redux-saga/effects';\nimport { loadStudentsApi, updateStudentApi, addStudentApi, deleteStudentApi } from './student.api';\nimport { LOAD_STUDENT_SUCCESS, LOAD_STUDENT_ERROR, LOAD_STUDENT, UPDATE_STUDENT_SUCCESS, UPDATE_STUDENT_ERROR, ADD_STUDENT, ADD_STUDENT_SUCCESS,\n  ADD_STUDENT_ERROR, DELETE_STUDENT_ERROR, DELETE_STUDENT_SUCCESS, DELETE_STUDENT, UPDATE_STUDENT, LOAD_STUDENT_PAGING } from './student.actions';\n\n// Our worker Saga: will perform the async increment task\nexport function* loadingStudentsAsync(payload: any) {\n \n  try {\n    const data = yield call(loadStudentsApi, payload);\n    const students = [...data._embedded.students];\n    const paging = { page : data.page };\n    yield put({ type: LOAD_STUDENT_SUCCESS, payload: students });\n    yield put({ type : LOAD_STUDENT_PAGING, payload: paging })\n  } catch (err) {\n    yield put({ type: LOAD_STUDENT_ERROR, payload: err.message });\n  }\n}\n\n// Our watcher Saga: spawn a new incrementAsync task on each INCREMENT_ASYNC\nexport function* watchLoadingStudentsAsync() {\n  yield takeEvery(LOAD_STUDENT, loadingStudentsAsync);\n}\n\nexport function* updatingStudentAsync(payload: any) {\n  try {\n    const data = yield call(updateStudentApi, payload);\n    const updatedStudent = data;\n\n    yield put({ type: UPDATE_STUDENT_SUCCESS, payload: updatedStudent });\n  } catch (err) {\n    yield put({ type: UPDATE_STUDENT_ERROR, payload: err.message });\n  }\n}\n\nexport function* watchUpdatingStudentAsync() {\n  yield takeEvery(UPDATE_STUDENT, updatingStudentAsync);\n}\n\nexport function* deletingStudentAsync(payload: any) {\n  try {\n    yield call(deleteStudentApi, payload);\n\n    yield put({ type: DELETE_STUDENT_SUCCESS, payload: null });\n  } catch (err) {\n    yield put({ type: DELETE_STUDENT_ERROR, payload: err.message });\n  }\n}\n\nexport function* watchDeletingStudentAsync() {\n  yield takeEvery(DELETE_STUDENT, deletingStudentAsync);\n}\n\nexport function* addingStudentAsync(payload: any) {\n  try {\n    const data = yield call(addStudentApi, payload);\n    const addedStudent = data;\n\n    yield put({ type: ADD_STUDENT_SUCCESS, payload: addedStudent });\n  } catch (err) {\n    yield put({ type: ADD_STUDENT_ERROR, payload: err.message });\n  }\n}\n\nexport function* watchAddingStudentAsync() {\n  yield takeEvery(ADD_STUDENT, addingStudentAsync);\n}\n\nexport function* studentSaga() {\n  yield all([\n    watchLoadingStudentsAsync(),\n    watchUpdatingStudentAsync(),\n    watchDeletingStudentAsync(),\n    watchAddingStudentAsync()\n  ]);\n}\n","import { combineReducers } from 'redux';\nimport { selectedStudentReducer, studentsReducer } from '../components/student/student.reducer';\n\nexport * from '../components/student/student.actions';\nexport * from '../components/student/student.reducer';\nexport * from '../components/student/student.saga';\n\nconst store = combineReducers({\n  students: studentsReducer,\n  selectedStudent: selectedStudentReducer,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport App from './App';\nimport './index.scss';\nimport app from './store';\nimport { studentSaga } from './components/student/student.saga';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n// create and configure reduxer middleware ( saga is a middleware )\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = compose;\nconst store = createStore(\n  app,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(studentSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n\ndocument.getElementById('gdpr')\n);\n\n"],"sourceRoot":""}