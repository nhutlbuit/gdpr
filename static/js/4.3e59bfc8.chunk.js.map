{"version":3,"sources":["components/student/SearchCriteria.tsx","components/student/useStudents.tsx","components/Modal.ts","components/ModalYesNo.tsx","components/student/StudentDashBoard.tsx","components/student/StudentDetail.tsx","components/student/Student.tsx"],"names":["SearchCriteria","props","useState","searchValue","setSearchValue","onSubmit","typingTimeOutRef","useRef","clearSearchValue","useCallback","type","className","value","onChange","e","valueTemp","target","current","clearTimeout","setTimeout","onClick","useStudents","dispatch","useDispatch","students","useSelector","state","data","pagination","page","getStudentsError","error","updateStudentsError","updateError","updateStudentsSuccess","createStudentsError","createError","addStudent","student","addStudentAction","deleteStudent","deleteStudentAction","getStudents","filter","loadStudentsAction","updateStudent","updateStudentAction","Modal","el","modalRoot","document","createElement","getElementById","this","appendChild","removeChild","createPortal","children","Component","ModalYesNo","message","onYes","onNo","StudentDashBoard","editStudent","addNewStudent","showModal","setShowModal","studentToDelete","setStudentToDelete","number","totalElements","size","totalPages","searchName","setFilter","handleCloseModal","a","alert","fullName","useEffect","name","map","st","key","studentCode","trainingClass","dateOfBirth","phoneNumber","address","Pagination","onPageChange","newPageNumber","onPageSizeChange","newPagesize","handleDeleteStudent","StudentDetail","history","useHistory","Object","assign","setSt","isCreate","setIsCreate","classCodeList","setClassCodeList","selectedClass","setSelectedClass","Date","dob","setDob","fetch","response","json","responseJson","status","options","trainingClasses","classCodes","list","classCode","stu","push","id","firstName","lastName","middleName","save","createStudent","updatedStudent","handleStudentChange","fetchClassCodeList","undefined","classCodeSelect","find","htmlFor","defaultValue","placeholder","selected","date","Button","variant","Student","setStudent","exact","path","component"],"mappings":"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","file":"static/js/4.3e59bfc8.chunk.js","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\n\nfunction SearchCriteria(props: any) {\n    const [searchValue, setSearchValue] = useState('');\n    const { onSubmit } = props;\n    // created object, value is not change between render times\n    const typingTimeOutRef = useRef<any | null>(null);\n\n    function handleSearchValueOnChange(e: any) {\n        const valueTemp = e.target.value;\n        setSearchValue(e.target.value);\n        if (!onSubmit) {\n            return;\n        }\n\n        if (typingTimeOutRef.current) {\n            clearTimeout(typingTimeOutRef.current);\n        }\n\n        typingTimeOutRef.current = setTimeout(() => {\n            onSubmit(valueTemp);\n        }, 400);\n    }\n\n    const clearSearchValue = useCallback((type) => {\n        onSubmit('');\n        setSearchValue('');\n    },[])\n\n    return (\n        <div>\n            <div className=\"bold-text\">Search criteria:</div>\n            <form>\n                <input className=\"text-box\" type=\"text\" value={searchValue} onChange={handleSearchValueOnChange}>\n                </input>\n                <button className=\"use-icon\" onClick={clearSearchValue}>\n                    <i className=\"fas fa-times\"/>\n                </button>\n            </form>\n        </div>\n    );\n\n}\n\nexport default SearchCriteria;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadStudentsAction, deleteStudentAction, addStudentAction, updateStudentAction } from './student.actions';\n\n/** Custom hook for accessing Student state in redux store */\nfunction useStudents() {\n  const dispatch = useDispatch();\n\n  return {\n    // Selectors\n  //   studentList1: useSelector(state => console.log(' state.students.updateError', state.students.updateError)),\n    students: useSelector((state: any) => state.students.data),\n  //  selectedStudent: useSelector(state => state.selectedStudent),\n    pagination: useSelector((state: any) => state.students.page),\n    getStudentsError: useSelector((state: any) => state.students.error),\n    updateStudentsError: useSelector((state: any) => state.students.updateError),\n    updateStudentsSuccess: useSelector((state: any) => state.students.updateError),\n    createStudentsError: useSelector((state: any) => state.students.createError),\n    \n\n    // Dispatchers\n    // Wrap any dispatcher that could be called within a useEffect() in a useCallback()\n    addStudent: (student: any) => dispatch(addStudentAction(student)),\n    deleteStudent: (student: any) => dispatch(deleteStudentAction(student)),\n    getStudents: useCallback((filter) => dispatch(loadStudentsAction(filter)), [dispatch]), // called within a useEffect()\n  //  selectStudent: student => dispatch(selectStudentsAction(student)),\n    updateStudent: (student: any) => dispatch(updateStudentAction(student))\n  };\n}\n\nexport default useStudents;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\n\n\nclass Modal extends Component {\n\n  el: any;\n  modalRoot: any;\n\n  constructor(props: any) {\n    super(props);\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementById('modal');\n  }\n\n  componentDidMount() {\n    this.modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    this.modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return createPortal(this.props.children, this.el);\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport Modal from './Modal';\n\nconst ModalYesNo = ( message?: any, onYes?: any, onNo?: any ) => (\n  <Modal>\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">Confirm</p>\n        </header>\n        <section className=\"modal-card-body\">{message}</section>\n        <footer className=\"modal-card-foot card-footer\">\n          <button className=\"button modal-no\" onClick={onNo}>\n            No\n          </button>\n          <button className=\"button is-primary modal-yes\" onClick={onYes}>\n            Yes\n          </button>\n        </footer>\n      </div>\n    </div>\n  </Modal>\n);\n\nexport default ModalYesNo;\n","import React, { useState, useEffect } from 'react';\nimport Pagination from './Pagination';\nimport SearchCriteria from './SearchCriteria';\nimport useStudents from './useStudents';\nimport ModalYesNo from '../ModalYesNo';\n\nfunction StudentDashBoard(props: any) {\n  const { editStudent, addNewStudent } = props;\n  // const [students, setStudents] = useState([]);\n  // const [pagination, setPagination] = useState(page);\n  const [showModal, setShowModal] = useState(false);\n  const [studentToDelete, setStudentToDelete] = useState<any | null>();\n  const page = {\n    number: 0,\n    totalElements: 5,\n    size: 5,\n    totalPages: 1,\n    searchName: ''\n  };\n  const [filter, setFilter] = useState(page);\n  \n  const { getStudents, students, pagination, deleteStudent, getStudentsError } = useStudents();\n\n  useEffect(() => {\n   getStudents(filter);\n  },[filter]);\n\n  if (getStudentsError) {\n    alert('Failed to fetch data');\n  }\n\n  /* \n  useEffect(() => {\n    async function fetchStudents() {\n\n      try {\n        const url = `/trainingApi/students/search/likeName?name=${filter.searchName}&page=${filter.number}&size=${filter.size}&projection=InlineStudent`;\n        const response = await fetch(url);\n        const responseJson = await response.json();\n        setStudents(responseJson._embedded.students);\n        setPagination(responseJson.page); \n      } catch (error) {\n        console.log('Failed to fetch data');\n      }\n    }\n    fetchStudents();\n  }, [filter]);\n*/\n\n  function handlePageChange(newPageNumber: number) {\n    setFilter({\n      ...filter,\n      number: newPageNumber\n    })\n  }\n\n  function handlePageSizeChange(newPagesize: number) {\n    setFilter({\n      ...filter,\n      size: newPagesize,\n      number: 0\n    })\n  }\n\n  function handleFilterChange(name: string) {\n    if (name === filter.searchName) return;\n    setFilter({\n      ...filter,\n      searchName: name,\n      number: 0\n    })\n  }\n\n  function handleCloseModal() {\n    setShowModal(false);\n  }\n\n  function handleDeleteFromModal() {\n    handleCloseModal();\n    handleDeleteStudent();\n  }\n\n  function deleteAStudent(student: any) {\n    setShowModal(true);\n    setStudentToDelete(student);\n  }\n\n  async function handleDeleteStudent() {\n    // try {\n    //   const url = `/trainingApi/students/${studentToDelete.id}`;\n    //   const response = await axios.delete(url);\n    //   if (response.status === 204) {\n    //     alert(`Deleted student ${studentToDelete.fullName} successfully!`)\n    //     setFilter({\n    //       ...filter,\n    //       number: 0\n    //     });\n    //   }\n    // } catch (error) {\n    //   console.log(`Failed to delete student ${studentToDelete.fullName}`);\n    // }\n\n    deleteStudent(studentToDelete);\n    alert(`Deleted student ${studentToDelete.fullName} successfully!`)\n      setFilter({\n        ...filter,\n        number: 0\n      });\n  }\n\n  return (\n    <div >\n      <h1 className=\"dash-board\">Dash Board</h1>\n      <SearchCriteria onSubmit={handleFilterChange} />\n      <table>\n        <thead>\n          <tr>\n            <th>Student Code</th>\n            <th>Name</th>\n            <th>Class</th>\n            <th>Date Of Birth</th>\n            <th>Phone</th>\n            <th>Address</th>\n            <th>\n              <button className=\"use-icon\" onClick={() => { {addNewStudent()} }}>\n                <i className=\"fas fa-plus\" />\n              </button>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {students.map((st: any) => (\n            <tr key={st?.studentCode} >\n              <td>{st?.studentCode}</td>\n              <td> {st?.fullName}</td>\n              <td> {st?.trainingClass ? st?.trainingClass?.className : ''}</td>\n              <td>{st?.dateOfBirth}</td>\n              <td>{st?.phoneNumber}</td>\n              <td>{st?.address}</td>\n              <td>\n                <button onClick={() => deleteAStudent(st)} className=\"use-icon-delete\">\n                  <i className=\"fas fa-trash\" />\n                </button>\n                <button className=\"use-icon\" onClick={() => {editStudent(st)}}>\n                  <i className=\"fas fa-edit\" />\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Pagination pagination={pagination} onPageChange={handlePageChange} onPageSizeChange={handlePageSizeChange} />\n      {showModal && (\n        <ModalYesNo\n          message={`Would you like to delete ${studentToDelete.fullName}?`}\n          onNo={handleCloseModal}\n          onYes={handleDeleteFromModal}\n        />\n      )}\n\n    </div>\n  );\n}\n\nexport default StudentDashBoard;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Select from 'react-select';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport useStudents from './useStudents';\nimport Button from 'react-bootstrap/Button';\n\nfunction StudentDetail(props: any) {\n\n  const history = useHistory();\n  const { student } = props;\n  const [st, setSt] = useState(Object.assign({}));\n  const [isCreate, setIsCreate] = useState(true);\n  const [classCodeList, setClassCodeList] = useState([]);\n  const [selectedClass, setSelectedClass] = useState();\n  const [dob, setDob] = useState(new Date());\n  const { updateStudent, addStudent, updateStudentsError, createStudentsError } = useStudents();\n\n  useEffect(() => {\n    fetchClassCodeList();\n  }, []);\n\n  useEffect(() => {\n    const isCreate = (student === undefined || student === null);\n    setSt(isCreate? {} : student);\n    setIsCreate(isCreate);\n    setSelectedClass(classCodeList[0]);\n    if (!isCreate) {\n      setDob(new Date(student.dateOfBirth));\n      const classCodeSelect = classCodeList.find((e: any) => e.value === student.trainingClass.classCode);\n      setSelectedClass(classCodeSelect);\n    }\n  }, [classCodeList]);\n\n  async function fetchClassCodeList() {\n    try {\n      const url = `/trainingApi/trainingClasses/search/fetchClassCodes?projection=InlineTrainingClassGetIdOnly`;\n      const response = await fetch(url);\n      const responseJson = await response.json();\n      if (response.status === 200) {\n        const options = responseJson['_embedded'].trainingClasses;\n        const classCodes = options.map((e: any) => {\n            const list: any = {};\n            list['label'] = e.className;\n            list['value']  = e.classCode;\n            return list;\n        });\n        setClassCodeList(classCodes);\n      }\n    } catch (error) {\n      alert(`Get list class code error!`);\n    }\n  }\n\n  async function createStudent(stu: any) {\n  /*  try {\n      const url = `/trainingApi/students`;\n      const response = await Axios.post(url, stu);\n      if (response.status === 201) {\n        alert('Save Successfully!');\n        history.push('/student');\n      }\n    } catch (error) {\n      alert(`Failed to save student ${stu.firstName}`);\n    }\n*/\n    await addStudent(stu);\n    if (createStudentsError) {\n      alert('Save error!');\n    } else {\n      alert('Save Successfully!');\n      history.push('/student');\n    }\n  }\n\n\n  async function updatedStudent(stu: any) {\n    const data: any = {};\n    data['id'] = stu.id;\n    data['classCode'] = stu.classCode ? stu.classCode: stu?.trainingClass?.classCode;\n    data['dateOfBirth'] = stu.dateOfBirth;\n    data['firstName'] = stu.firstName;\n    data['lastName'] = stu.lastName;\n    data['middleName'] = stu.middleName;\n    data['phoneNumber'] = stu.phoneNumber;\n    data['studentCode'] = stu.studentCode;\n    data['address'] = stu.address;\n\n    // try {\n    //   const url = `/trainingApi/students/${data.id}`;\n    //   const response = await Axios.patch(url, data);\n    //   if (response.status === 200) {\n    //     alert('Save Successfully!');\n    //     history.push('/student');\n    //   }\n    // } catch (error) {\n    //   alert(`Failed to save student ${stu.firstName}`);\n    // }\n    await updateStudent(data);\n    if (updateStudentsError) {\n      alert('Save error!');\n    } else {\n      alert('Save Successfully!');\n      history.push('/student');\n    }\n  }\n  \n\n  function save(e: any) {\n    if (isCreate) {\n      createStudent(e);\n    } else {\n      updatedStudent(e);\n    }\n  }\n\n  function cancel() {\n    history.push('/student');\n  }\n\n  function onChangeClassCode(e: any) {\n    setSt({...st, 'classCode': e.value});\n  }\n\n  function handleDateOfBirthChange(date: any) {\n    setDob(date);\n    setSt({...st, 'dateOfBirth': date});\n  }\n\n  function handleStudentChange(e: any) {\n    setSt({...st, [e.target.name]: e.target.value});\n  }\n\n  return (\n    <div>\n       <h1 className=\"dash-board\">{student ? 'Edit Student' : 'Add New Student' }</h1>\n       <div className=\"field\">\n\n          <label className=\"label\" htmlFor=\"stCode\">Student Code</label>\n          <input name = \"studentCode\" className=\"input\" type=\"text\" defaultValue={st?.studentCode} placeholder= 'Student Code' onChange={handleStudentChange} />\n          \n          <label className=\"label\" htmlFor=\"stCode\">First Name</label>\n          <input name = \"firstName\" className=\"input\" type=\"text\" defaultValue={st?.firstName}  placeholder= 'First Name' onChange={handleStudentChange} />\n          \n          <label className=\"label\" htmlFor=\"stCode\">Middle Name</label>\n          <input name = \"middleName\" className=\"input\" type=\"text\" defaultValue={st?.middleName}  placeholder= 'Middle Name' onChange={handleStudentChange} />\n          \n          <label className=\"label\" htmlFor=\"stCode\">Last Name</label>\n          <input name = \"lastName\" className=\"input\" type=\"text\" defaultValue={st?.lastName}  placeholder= 'Last Name' onChange={handleStudentChange} />\n          \n          <label className=\"label\" htmlFor=\"stCode\">Phone Number</label>\n          <input name = \"phoneNumber\" className=\"input\" type=\"text\" defaultValue={st?.phoneNumber}  placeholder= 'Phone Number' onChange={handleStudentChange} />\n          \n          <label className=\"label\" htmlFor=\"classCode\">Class</label>\n          <Select options={classCodeList} onChange={onChangeClassCode} className=\"selectClassCode\" value={selectedClass}/>\n      \n          <label className=\"label\" htmlFor=\"dateOfBirth\">Date Of Birth</label>\n          <DatePicker selected={dob} onChange={handleDateOfBirthChange} />\n\n          <label className=\"label\" htmlFor=\"stCode\">Address</label>\n          <input name = \"address\" className=\"input\" type=\"text\" defaultValue={st?.address}  placeholder= 'Address' onChange={handleStudentChange} /> \n    </div>\n    <Button variant=\"success\" name =\"save\" onClick={() => save(st)}>Save</Button >\n    &nbsp;\n    <Button variant=\"secondary\" name =\"cancel\" onClick={() => cancel()}>Cancel</Button>\n    </div>\n  );\n}\n\nexport default StudentDetail;","import React, { useState } from 'react';\nimport StudentDashBoard from './StudentDashBoard';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport StudentDetail from './StudentDetail';\n\nfunction Student() {\n\n  const history = useHistory();\n  const [student, setStudent] = useState('');\n\n  function addStudent() {\n    setStudent('');\n    history.push('/student/0');\n  }\n\n  function editStudent(student: any) {\n    setStudent(student);\n    history.push(`/student/${student.id}`);\n  }\n\n  return (\n    <div className=\"content-container\">\n      <div>\n        <div >\n          <Switch>\n            <Route\n              exact\n              path=\"/student\"\n              component={() => (\n                <StudentDashBoard addNewStudent={addStudent} editStudent={editStudent}/>\n              )}\n            />\n            <Route\n              exact\n              path=\"/student/:id\"\n              component={() => {\n                return (\n                <StudentDetail student={student}/>\n                );\n              }}\n            />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Student;"],"sourceRoot":""}